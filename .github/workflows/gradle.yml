name: Java Build & Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-package:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Create credentials.json
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS }}" > credentials.json
        shell: bash

      - name: Build Project and Create Installer
        run: ./gradlew clean build createInstaller -PinstallerType=${{ matrix.os == 'windows-latest' && 'exe' || matrix.os == 'ubuntu-latest' && 'deb' || 'pkg' }}
        shell: bash

      - name: Package with jpackage on Linux/macOS
        if: runner.os != 'Windows'
        run: |
          mkdir -p dist
          JAR_NAME=$(ls build/libs/*.jar | head -n 1)
          echo "Using jar: $JAR_NAME"

          TYPE="deb"
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            TYPE="pkg"
          fi

          jpackage \
            --type $TYPE \
            --input build/libs \
            --dest dist \
            --name MeuApp \
            --main-jar $(basename $JAR_NAME) \
            --main-class projetofinal.model.Main \
            --java-options "--enable-preview" \
            --verbose
        shell: bash

      - name: Package with jpackage on Windows
        if: runner.os == 'Windows'
        run: |
          mkdir dist
          for /f "delims=" %%i in ('dir /b build\libs\*.jar') do set JAR_NAME=%%i & goto afterloop
          :afterloop
          echo Using jar: %JAR_NAME%

          jpackage.exe ^
            --type exe ^
            --input build\libs ^
            --dest dist ^
            --name MeuApp ^
            --main-jar %JAR_NAME% ^
            --main-class projetofinal.model.Main ^
            --java-options "--enable-preview" ^
            --verbose
        shell: cmd

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MeuApp-${{ matrix.os }}
          path: dist/*
