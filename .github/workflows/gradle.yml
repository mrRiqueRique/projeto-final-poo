name: Java Build & Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-package:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Create credentials.json
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS }}" > src/main/resources/credentials.json
        shell: bash

      - name: Build and Package App on Windows/macOS
        if: runner.os != 'Linux'
        run: ./gradlew clean build createInstaller -PinstallerType=${{ runner.os == 'Windows' && 'exe' || runner.os == 'macOS' && 'pkg' || 'app-image' }}
        shell: bash

      - name: Setup snapcraft on Linux
        if: runner.os == 'Linux'
        run: sudo snap install snapcraft --classic

      - name: Create Snap launch script and prepare files
        if: runner.os == 'Linux'
        run: |
          ./gradlew clean build
          mkdir -p snap/bin
          cp build/libs/projetofinal-1.0.0.jar snap/bin/
          cat << 'EOF' > snap/launch-gerenciador-academico
          #!/bin/sh
          exec java --module-path \$SNAP/lib --add-modules javafx.controls,javafx.fxml -jar \$SNAP/bin/projetofinal-1.0.0.jar
          EOF
          chmod +x snap/launch-gerenciador-academico
        shell: bash

      - name: Build Snap Package on Linux
        if: runner.os == 'Linux'
        run: snapcraft
        shell: bash

      - name: Upload Installer or Snap Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Gerenciador-Academico-${{ matrix.os }}
          path: ${{ runner.os == 'Linux' && '*.snap' || 'build/installer/*' }}
